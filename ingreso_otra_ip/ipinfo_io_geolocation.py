import requests
import argparse
import socket
import json
import pandas as pd
from os import path

parser = argparse.ArgumentParser(description="Detector de Cabeceras o Headers")
parser.add_argument('-t', '--target', help="Objetivo") # Le agrego opciones a mi programa por consola. target será la variable que contenga mi objetivo
parser = parser.parse_args()

def main():
    """
    1. Hacer "ping" por consola a un dominio para obtener rápido y facil las IP de los servidores
    2. Copiar la IP. Por ejemplo: 18.67.130.98 y pegarla en ipinfo.io con un slash de separación
    3. Agregar al dominio un "/json" para traer la info como json
    """
    if parser.target is not None:
        target = parser.target
        ip = socket.gethostbyname(target)
    else:
        target = 'www.lanacion.com'
        ip = socket.gethostbyname(target)
    
    name_file = target.split('.')[1]
    
    sitio = f'https://ipinfo.io/{ip}/json'
    agent = {
        "User-Agent": "Firefox"
    }

    request = requests.get(sitio, headers=agent)
    print(request.text)

    with open(f'exportables/{name_file}.json', 'w') as json_file:
        json_file.write(request.text)
        print("Archivo Json guardado con éxito!!!")

    request_json = json.loads(request.text)
    request_json["domain"] = f'{target}'

    print()
    print(json.dumps(request_json, indent=4))
    print()

    request_list = [request_json]

    df = pd.DataFrame(request_list)
    print(df.info())

    if path.exists('exportables/ipinfo_dataset.xlsx'):
        file = 'exportables/ipinfo_dataset.xlsx'
        df_new = pd.read_excel(file)
        df_concat = pd.concat([df, df_new], ignore_index=True)
        df_concat = df_concat.drop_duplicates(keep='last')
        df_concat.to_excel('exportables/ipinfo_dataset.xlsx', index=False)
        print("Nuevos datos cargados en 'exportables/ipinfo_dataset.xlsx'")
    else:
        df.to_excel('exportables/ipinfo_dataset.xlsx', index=False)
        print("Archivo creado con éxito dentro de la carpeta 'exportables'...")
     
if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("Saliendo...")
        exit()