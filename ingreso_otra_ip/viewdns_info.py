import requests
import pandas as pd
from bs4 import BeautifulSoup

def main():
    """
    Tomando un dominio "x" este script explora que otros dominios est치n inscriptos en la misma IP usando el servicio de viewdns.info mediante web scrapping
    y luego exporta un excel con esta informaci칩n.
    """
    
    sitio = 'www.lanacion.com'
    name_file = sitio.split('.')[1]
    agent = {
        "User-Agent": "Firefox"
    }
    viewdns = f'https://viewdns.info/reverseip/?host={sitio}&t=1'
    request = requests.get(viewdns, headers=agent)
    soup = BeautifulSoup(request.text, 'html5lib')
    soup_tables = soup.findAll('table')

    # Filtrar la tabla con el atributo border="1"
    table_with_border = None
    for table in soup_tables:
        if table.get('border') == '1':
            table_with_border = table
            break

    # Verificar si la tabla se encontr칩
    if table_with_border:
        tr_items = []
        print("Tabla encontrada:")
        # print(table_with_border)
        trs = table_with_border.findAll('tr')
        for tr in trs:
            tds = tr.findAll('td')
            tds_list = []
            for td in tds:
                tds_list.append(td.text)
            tr_items.append(tds_list)
        df = pd.DataFrame(tr_items[1:], columns=tr_items[0])
        df.to_excel(f"dominios_{name_file}.xlsx", sheet_name="dominios_registrados", index=False)
        print("Excel cargado!!!")
        print(df.info())

    else:
        print("No se encontr칩 una tabla con border=\"1\"")

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("Saliendo...")
        exit()

